* TASKS
- [X] Constant "variable" declaration
- [X] Enum declaration
- [X] Consider individual types for struct member and enum variation 
- [X] Enum variant node
- [X] Struct member node
- [X] Enum type generation 
- [X] Enum instance (unitialized) should have first enum value if there is one 
- [X] Member ref expression node 
- [X] Member ref expression node parsing
- [ ] Reserve for arrays 
- [ ] Constant with separate node 
- [X] Rename var_ref to ref 
- [X] Enum unit test 
- [ ] Improve unit testing for structs
- [X] Check enum non-existing variant expression  
- [X] Enum member access 
- [X] Self containing struct member should generate error: struct a { mem a; } -> leads to endless recursion
- [X] Public and private struct members parsing.
- [ ] Check for recursions over multiple structs struct A { b B } struct B { a A } -> generate error
- [ ] Type casting 
- [ ] Single character parsing ('c') 
- [ ] Enum base expression generation (only numbers accepted for now)
- [X] Struct member access
- [ ] Constant expression evaluator
- [ ] Arrays
- [ ] Unary operator (separate expression node in ast)
- [ ] Pointers 
- [X] Handle invalid found types [[file:~/Develop/bl/libbl/src/linker.c::found%20%3D%20satisfy_decl_ref(cnt,%20expr)%3B][here]]
- [ ] Member access type checking [[7][here]]  
- [ ] Check if members are in current scope or public [[file:~/Develop/bl/libbl/src/linker.c::/*%20if%20current%20mod_scope%20contains%20found%20structure%20than%20private%20members%20of%20the%20struct%20can%20be][here]] -> generate error if member is inaccessible  
- [ ] All public members in structure must have also public types -> print error 


* BUGS


* PIPELINE
- file loader
- lexer
- token printer
- parser
- linker
- ast printer
- check
- llvm generator
- llvm jit execute
- llvm byte-code writer
- llvm linker
- llvm native bin builder
   

* IDEAS
- implicit casting pointer to bool: if (some_ptr) {}
