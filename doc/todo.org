* TASKS
- [-] Enum [7/8]
  - [X] Enum declaration
  - [X] Enum variant node
  - [X] Enum type generation 
  - [X] Enum instance (unitialized) should have first enum value if there is one 
  - [X] Enum unit test 
  - [X] Enum member access 
  - [ ] Enum base expression generation (only numbers accepted for now)
  - [X] Check enum non-existing variant expression  
- [-] Struct [8/12]
  - [X] Self containing struct member should generate error: struct a { mem a; } -> leads to endless recursion
  - [X] Member ref expression node 
  - [X] Member ref expression node parsing
  - [X] Struct member node
  - [X] Public and private struct members parsing.
  - [X] Struct member access
  - [X] Handle invalid found types [[file:~/Develop/bl/libbl/src/linker.c::found%20%3D%20satisfy_decl_ref(cnt,%20expr)%3B][here]]
  - [ ] Member access type checking [[7][here]]  
  - [X] Check if members are in current scope or public [[file:~/Develop/bl/libbl/src/linker.c::satisfy_member(context_t%20*cnt,%20bl_node_t%20*expr)][here]] -> generate error if member is inaccessible  
  - [ ] Initialization expression for struct [[file:~/Develop/bl/libbl/src/parser.c::/*%20TODO:%20parse%20initialization%20expression%20here%20*/][here]] 
  - [ ] Check for recursions over multiple structs struct A { b B } struct B { a A } -> generate error
  - [ ] All public members in structure must have also public types -> print error 
- [-] Array [3/7]
  - [X] Parsing
  - [X] Array elem expression parsing 
  - [ ] LLVM generation 
  - [X] Type declaration
  - [ ] Multidimensional arrays??? 
    decl_var should contain array with dimension sizes do recalculate positions later
    -> define helper methods for adding dimensions
  - [ ] Use expression reference instead number in [N] 
  - [ ] Handle zero sized arrays -> generate error (in check.c)
- [ ] Casting [0/1]
  - [ ] Parsing
- [-] Other [1/6]
  - [X] Constant "variable" declaration
  - [ ] Improve unit testing 
  - [ ] Type casting 
  - [ ] Single character parsing ('c') 
  - [ ] Linux/MacOS installation in CMAKE
  - [ ] Constant expression evaluator
- [ ] Unary operator (separate expression node in ast)
- [ ] Pointers 


* BUGS
- [X] Unable to return struct member copy from the function

* PIPELINE
- file loader
- lexer
- token printer
- parser
- linker
- ast printer
- check
- llvm generator
- llvm jit execute
- llvm byte-code writer
- llvm linker
- llvm native bin builder
   

* IDEAS
- implicit casting pointer to bool: if (some_PT) {}
- static array
#+BEGIN-SRC
var arr i32[64];
arr[0] = 10;
#+END-SRC
- zero initialized statc arrays??
