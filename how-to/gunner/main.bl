// TODO: miniaudio, GL

#import "extra/glfw3"

WINDOW_WIDTH  :: 800;
WINDOW_HEIGHT :: 600;
WINDOW_TITLE  :: "Gunner!";
main_window: *glfw.Window;

main :: fn () s32 {
    using glfw;

    // Initialize GLFW.
    if Init() == 0 {
        print_glfw_error();
        panic("Cannot initialize Glfw.\n");
    }

    // Create GLFW window.
    WindowHint(CONTEXT_VERSION_MAJOR, 3);
    WindowHint(CONTEXT_VERSION_MINOR, 3);
    WindowHint(OPENGL_FORWARD_COMPAT, 1);
    WindowHint(OPENGL_PROFILE, OPENGL_CORE_PROFILE);
    WindowHint(DOUBLEBUFFER, TRUE);
    WindowHint(RESIZABLE, FALSE);

    main_window = CreateWindow(
        WINDOW_WIDTH,
        WINDOW_HEIGHT,
        std.strtoc(WINDOW_TITLE),
        null,
        null
    );

    if !main_window {
        print_glfw_error();
        panic("Cannot create GLFW window.\n");
    }

    MakeContextCurrent(main_window);
    SwapInterval(1);

    // Game loop comes here!
    loop WindowShouldClose(main_window) == 0 {
        glfw.PollEvents();

        // Since we use temporary allocator, we should reset it's internal storage
        // each frame.
        temporary_reset();
    }

    // Termination
    DestroyWindow(main_window);
    Terminate();
    return 0;
}

#private
// Following code is private to this file.

print_glfw_error :: fn () {
    cstr: *u8;
    glfw.GetError(&cstr);

    if cstr == null { return; }
    tmp := string_view.{ auto C.strlen(auto cstr), auto cstr };
    print_err("GLFW Error: %", tmp);
}
