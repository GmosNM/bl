* Ideas  [8/19]
  - [X] make builder global
  - [X] enable implicit casting only to bigger integer type and check signed unsigned also 
  - [ ] reimplement LLVM-C binding
  - [X] add MirArg
  - [ ] pass all structures passed by value as pointers into the functions and make copy inside. 
  - [X] support of #extend hash directive for struct inherritance? 
  - [X] replace , by ; in structs and enums  
  - [ ] #flags enum?
  - [X] Simple structure inherritance with #using, #base or some keyword?
  - [X] Update documentation (we are using recursive git repository)
  - [X] Switch to tlib-c 
  - [ ] Operator overload
  - [ ] Better definition of operators based on type (we wan't compary types also s32 == f32 s32 != f32...)
  - [ ] #typeof operator
  - [ ] Static assert
    #+BEGIN_SRC bl
    #assert(typeof(i) == s32);
    #+END_SRC
  - [ ] Static if
    #+BEGIN_SRC bl
    #if true {
    }
    #+END_SRC
  - [ ] Introduce namespces
    #+BEGIN_SRC bl
    #namespace Memory
    alloc :: fn () {}
    
    // out of namespace
    Memory.alloc();
 
    // with using
    #using Memory
    alloc();
    #+END_SRC
  - [ ] Explicit compile time execution
    #+BEGIN_SRC bl
    i :: #run get_random_number();
    #+END_SRC
  - [ ] Builder symbol define tool procedure
    #+BEGIN_SRC bl
    add_global_immutable_bool("IS_DEBUG", true);
    add_global_immutable_s64("MY_NUMBER", 666);
    #+END_SRC





