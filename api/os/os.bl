//************************************************************************************************
// bl
//
// File:   os.bl
// Author: Martin Dorazil
// Date:   3/15/18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#load "alloc.bl"
#load "print.bl"

// All supported platforms
OS_WINDOWS : 0;
OS_MACOS   : 1; 
OS_LINUX   : 2;

EXIT_FAILURE : 1;
EXIT_SUCCESS : 0;

__assert : fn (expr bool, file string, line s32) {
  __bl_assert_failure : fn (file string, line s32) #extern;

  if (!expr) {
    __bl_assert_failure(file, line);
  }
};

__Array : struct {
  data *u8,
  len   usize
};

abort : fn () {
  __bl_abort();
};

exit : fn () {
  __bl_exit();
};

any : struct {
  val *u8,
  t    TypeKind
};

TypeKind : enum s32 {
  SInt     : 1,  /* i8, i16, i32, i64 */
  UInt     : 2,  /* u8, i16, u32, u64 */
  Size     : 3,  /* usize */
  Ptr      : 4,  /* pointers */
  Struct   : 5,  /* structs */
  Enum     : 6,  /* enums */
  Fn       : 7,  /* function */
  Real     : 8,  /* f32, f64 */
  String   : 9,  /* string */
  Char     : 10, /* char */
  Bool     : 11, /* bool */
  Void     : 12, /* void */
  Type     : 13, /* type */
  Any      : 14, /* any */
  Arr      : 15, /* array */
};
