//************************************************************************************************
// BL - SDL2
//
// File:   c.bl
// Author: Martin Dorazil
// Date:   14.2.18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

public module sdl2 {
  module c {
    public extern fn SDL_Init(flags i32) i32;

    public extern fn SDL_Quit();

    public extern fn SDL_CreateWindow(title string,
                                      x i32,
				      y i32,
				      w i32,
				      h i32,
				      flags i32) *window_t;

    public extern fn SDL_DestroyWindow(window *window_t);

    public extern fn SDL_GetError() string;

    public extern fn SDL_Delay(ms i32);

    public extern fn SDL_PumpEvents();

    public extern fn SDL_CreateRenderer(window *window_t,
                                        index i32,
                                        flags i32) *renderer_t;

    public extern fn SDL_DestroyRenderer(handle *renderer_t);

    public extern fn SDL_SetRenderDrawColor(renderer *renderer_t,
                                            r i32,
                                            g i32,
                                            b i32,
                                            a i32) i32;

    public extern fn SDL_RenderClear(renderer *renderer_t) i32;

    public extern fn SDL_RenderPresent(renderer *renderer_t);

    public extern fn SDL_PollEvent(event *event_key_t) i32;
           
    public extern fn SDL_GetWindowSurface(window *window_t) *surface_t;

    public extern fn SDL_UpperBlit(src *surface_t,
                                   srcrect *rect_t,
                                   dest *surface_t,
                                   dstrect *rect_t) i32;

    public extern fn SDL_UpdateWindowSurface(window *window_t) i32;

    public extern fn SDL_ConvertSurface(src *surface_t,
                                        fmt *pixel_format_t,
                                        flags i32) *surface_t;

    public extern fn SDL_FreeSurface(surface *surface_t);

    public extern fn SDL_CreateTextureFromSurface(renderer *renderer_t,
						  surface *surface_t) *texture_t;

    public extern fn SDL_DestroyTexture(texture *texture_t);

    public extern fn SDL_RenderCopy(renderer *renderer_t,
                                    texture *texture_t,
                                    srcrect *rect_t,
                                    dstcrect *rect_t) i32;
  }
}