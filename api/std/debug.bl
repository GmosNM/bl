//************************************************************************************************
// BL - STD 
//
// File:   debug.bl
// Author: Martin Dorazil
// Date:   14.2.18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

public module std {
  module c {
    public extern fn abort();
    public extern fn exit(status i32); 
    public extern fn puts(str string) i32; 

    // TODO: support varargs
    public extern fn printf(str string, a i32, b i32) i32; 
  } 

  public fn exit(status i32) {
    c::exit(status);
  }

  public fn abort(msg string) {
    println(msg);
    c::abort();
  }

  public fn assert(expr bool, msg string) {
    if (expr != true) {
      println(msg);
      c::abort();
    }
  }

  public fn println(str string) {
    c::puts(str);
  }

  public fn print(str string) {
    c::printf(str, 0, 0);
  }

  public fn print_1(str string, a i32) {
    c::printf(str, a, 0);
  }

  public fn print_2(str string, a i32, b i32) {
    c::printf(str, a, b);
  }
}
