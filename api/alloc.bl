//************************************************************************************************
// bl
//
// File:   alloc.bl
// Author: Martin Dorazil
// Date:   30/9/18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#load "utils.bl"

AllocMeta : struct {
  size usize,
  next *AllocMeta,
  prev *AllocMeta,
};

alloc_free_pool *AllocMeta := null;

alloc : fn (count usize) *void {
  if (count == 0) { return null; }
  
  size : count + sizeof(AllocMeta);
  mem := cast(*AllocMeta) __bl_alloc(size);
  mem->size = count;
  mem->next = null;
  mem->prev = null;

  mem = ptrshift(mem, sizeof(AllocMeta)); 
  return mem;
};

free : fn (ptr *void) {
  if (alloc_free_pool == null) {
    // empty free cache
    alloc_free_pool = ptr;
  }
};