//************************************************************************************************
// bl
//
// File:   file.bl
// Author: Martin Dorazil
// Date:   3/15/18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#load "libc.bl"

File : struct {
  handle *void,		
  size 	  usize	// file size in bytes
};

file_open : fn (file *File, filepath string) bool {
  read : "r";

  // get size of file stream in bytes
  fsize : fn (handle *void) usize {
    fseek(handle, 0, SEEK_END); 
    size := ftell(handle);
    fseek(handle, 0, SEEK_SET); 
    return size;
  };

  file->handle = fopen(filepath, read);
  if (file->handle == null) {
    file->size = 0;
    return false;
  } 

  file->size = fsize(file->handle);
  return true;
};

file_read_buf : fn (file *File, buf *char) bool {
  if (file == null || file->size == 0) { return false; }
  fread(buf, file->size, 1, file->handle); 
  return true;
};
	    
file_close : fn (file *File) {
  if (file == null) { return; }
  fclose(file->handle);
};
