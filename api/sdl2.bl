//*****************************************************************************
// bl api
//
// File:   sdl2.bl
// Author: Martin Dorazil
// Date:   09/02/2018
//
// Copyright 2017 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//*****************************************************************************

extern i32 SDL_Init(i32 flags);
extern void SDL_Quit();
extern void SDL_PumpEvents();
extern i64 SDL_CreateWindow(string title, i32 x, i32 y, i32 w, i32 h, i32 flags);
extern void SDL_DestroyWindow(i64 handle);
extern void SDL_Delay(i32 ms);
extern string SDL_GetError();

// module sdl2 {

enum init_flags {
  INIT_VIDEO,
}

enum window_flags {
  SDL_WINDOW_FULLSCREEN,
  SDL_WINDOW_OPENGL,
  SDL_WINDOW_SHOWN
}

i32 init() {
  i32 SDL_INIT_VIDEO = 32;
  return SDL_Init(SDL_INIT_VIDEO);
}

void quit() {
  SDL_Quit();
}

string get_error() {
  return SDL_GetError();
}

i64 create_window(string title, i32 x, i32 y) {
  i32 SDL_WINDOW_FULLSCREEN = 1;
  i32 SDL_WINDOW_OPENGL = 2;
  i32 SDL_WINDOW_SHOWN = 4;
  return SDL_CreateWindow(title, x, y, 800, 600, SDL_WINDOW_SHOWN);
}

void destroy_window(i64 handle) {
  SDL_DestroyWindow(handle);
}

void delay(i32 ms) {
  SDL_Delay(ms);
}

void pump_events() {
  SDL_PumpEvents();
}
