#load "std/utils.bl"

LINKER_OPT_EXEC :: "-e _start -lc -lm";
LINKER_OPT_SHARED :: "--shared -lc -lm";
LINKER_LIB_PATH :: "/usr/lib:/usr/local/lib:/lib64:/usr/lib/x86_64-linux-gnu";
LD_LINUX_SO :: "/lib64/ld-linux-x86-64.so.2";
BLRT_64 :: "../lib/bl/rt/blrt_x86_64_linux.o";

CONFIG :: 
    "// BL configuration file\n"
    "// This file is generated by bl-config tool and used by 'blc' compiler during compilation\n"
    "// process.\n\n"
    "VERSION \"%\"\n"
    "// Main API directory containing all modules and source files.\n"
    "LIB_DIR \"%\"\n"
    "// Default linker options used for executable linking.\n"
    "LINKER_OPT_EXEC \"%\"\n"
    "// Default linker options used for shared library linking.\n"
    "LINKER_OPT_SHARED \"%\"\n"
    "// Additional linker library path.\n"
    "LINKER_LIB_PATH \"%\"\n"
    ;

popen :: fn (f: *c_char, m: *c_char) c_void_ptr #extern "popen";
pclose :: fn (f: c_void_ptr) #extern "pclose";

ArgsImpl :: struct #base ArgParser.Ctx {
}
    
setup :: fn (parser: ArgParser.Parser) {}

configure :: fn () Error {
    print_log("Generate configuration file");
    lib_dir: string; 
    ld_linux_so: string;
    blrt_64: string;
    linker_opt_exec: string;
    linker_opt_shared: string;
    defer String.delete(linker_opt_exec);    
    defer String.delete(linker_opt_shared);    
    defer String.delete(blrt_64);
    defer String.delete(ld_linux_so);
    defer String.delete(lib_dir);
    
    lib_dir = sprint("%/%", g_pwd, LIB_DIR);
    {
       err :: Fs.normalize(&lib_dir);
       if !is_ok(err) {
           return error("Cannot find BL API libs on '%'", lib_dir);
       }
    }
    print_log("Found BL API on '%'.", lib_dir);
    
    ld_linux_so = String.new(LD_LINUX_SO);
    if !Fs.exist(ld_linux_so) {
        return error("Cannot find 64bit version of 'ld-linux.so' on '%'", ld_linux_so);
    }
    print_log("Found ld-linux.so 64bit on '%'.", ld_linux_so);
    
    blrt_64 = sprint("%/%", g_pwd, BLRT_64);
    {
       err :: Fs.normalize(&blrt_64);
       if !is_ok(err) {
           return error("Cannot find BL runtime on '%'", blrt_64);
       }
    }
    print_log("Found BL runtime on '%'.", blrt_64);
    
    linker_opt_exec = sprint("% -dynamic-linker % %", blrt_64, ld_linux_so, LINKER_OPT_EXEC);
    linker_opt_shared = sprint("%", LINKER_OPT_SHARED);

    return write_config(
        CONFIG, 
        VERSION,
        lib_dir,
        linker_opt_exec,
        linker_opt_shared,
        LINKER_LIB_PATH,
    );
}
