//************************************************************************************************
// bl
//
// File:   config.h
// Author: Martin Dorazil
// Date:   3/12/18
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#ifndef BL_CONFIG_H
#define BL_CONFIG_H

// Values set automatically during build by cmake.
#define BL_VERSION "@PROJECT_VERSION@"
#define BL_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define BL_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define BL_VERSION_PATCH @PROJECT_VERSION_PATCH@

#define BL_CONF_FILE "@BL_CONF_FILE@"

// MULTIPLATFROM: os preload depends on target build platfrom and should be chosen in runtime later!
#ifdef _WIN32
#define BL_PLATFORM_WIN 1
#define BL_PLATFORM_MACOS 0
#define BL_PLATFORM_LINUX 0
#define BL_EXPORT __declspec(dllexport)
#define OS_PRELOAD_FILE "os/_windows.bl"
#elif __APPLE__
#define BL_PLATFORM_WIN 0
#define BL_PLATFORM_MACOS 1
#define BL_PLATFORM_LINUX 0
#define BL_EXPORT
#define OS_PRELOAD_FILE "os/_macos.bl"
#elif __linux__
#define BL_PLATFORM_WIN 0
#define BL_PLATFORM_MACOS 0
#define BL_PLATFORM_LINUX 1
#define OS_PRELOAD_FILE "os/_linux.bl"
#define BL_EXPORT
#elif __CYGWIN__
#error "Unknown platform"
#else
#error "Unknown platform"
#endif

#ifdef __clang__
#define BL_COMPILER_CLANG 1
#define BL_COMPILER_GNUC 0
#define BL_COMPILER_MSVC 0
#elif defined(__GNUC__) || defined(__MINGW32__)
#define BL_COMPILER_CLANG 0
#define BL_COMPILER_GNUC 1
#define BL_COMPILER_MSVC 0
#elif _MSC_VER
#define BL_COMPILER_CLANG 0
#define BL_COMPILER_GNUC 0
#define BL_COMPILER_MSVC 1
#endif

#if BL_COMPILER_MSVC
#define NOMINMAX /* WTF??? */
#endif

#define ENV_PATH "PATH"
#if BL_PLATFORM_WIN
#include <windows.h>
#define PATH_MAX MAX_PATH
#endif

#if BL_PLATFORM_WIN
#define ENVPATH_SEPARATOR ';'
#define MSVC_CRT "msvcrt"
#define KERNEL32 "Kernel32"
#define SHLWAPI "Shlwapi"
#else
#define ENVPATH_SEPARATOR ':'
#endif

#define BUILD_API_FILE "build/build.bl"
#define BUILTIN_FILE "builtin/a.bl"

// NOTE: We are converting all backslashes on Windows to the forward slashes.
#define PATH_SEPARATOR "/"
#define PATH_SEPARATORC '/'

// LLVM_EXCLUDE_UNUSED_SYM - Exclude all unused functions and variables from LLVM IR when this is
// enabled.
//
// ASSERT_ON_CMP_ERROR - assert on compiler error.

#if BL_DEBUG
#define ASSERT_ON_CMP_ERROR 0
#define LLVM_EXCLUDE_UNUSED_SYM 1
#define BL_MAGIC_ENABLE 1
#else
#define ASSERT_ON_CMP_ERROR 0
#define LLVM_EXCLUDE_UNUSED_SYM 1
#define BL_MAGIC_ENABLE 0
#endif

#define VM_STACK_SIZE 2097152          // 2MB
#define VM_COMPTIME_CACHE_SIZE 1048576 // 1MB
#define BL_CONFIGURE_SH "@BL_CONFIGURE_SH@"

#define BL_LINKER "@BL_LINKER@"

// Config file entries
#define CONF_LINKER_OPT_EXEC_KEY "LINKER_OPT_EXEC"
#define CONF_LINKER_OPT_SHARED_KEY "LINKER_OPT_SHARED"
#define CONF_LINKER_LIB_PATH_KEY "LINKER_LIB_PATH"
#define CONF_LINKER_EXECUTABLE "LINKER_EXECUTABLE"
#define CONF_LIB_DIR_KEY "LIB_DIR"
#define CONF_VC_VARS_ALL_KEY "VC_VARS_ALL"
#define CONF_VERSION "VERSION"

// module related config
#define CONF_MODULE_VERSION "VERSION"
#if BL_PLATFORM_WIN
#define CONF_MODULE_ENTRY "WIN32_ENTRY"
#define CONF_MODULE_LIB_PATH "WIN32_LIB_PATH"
#define CONF_MODULE_LINK "WIN32_LINK"
#define CONF_MODULE_LINKER_OPT "WIN32_LINKER_OPT"
#elif BL_PLATFORM_LINUX
#define CONF_MODULE_ENTRY "LINUX_ENTRY"
#define CONF_MODULE_LIB_PATH "LINUX_LIB_PATH"
#define CONF_MODULE_LINK "LINUX_LINK"
#define CONF_MODULE_LINKER_OPT "LINUX_LINKER_OPT"
#elif BL_PLATFORM_MACOS
#define CONF_MODULE_ENTRY "MACOS_ENTRY"
#define CONF_MODULE_LIB_PATH "MACOS_LIB_PATH"
#define CONF_MODULE_LINK "MACOS_LINK"
#define CONF_MODULE_LINKER_OPT "MACOS_LINKER_OPT"
#else
#error "Unknown platform"
#endif
#define MODULE_CONFIG_FILE "module.conf"

#define BUILD_SCRIPT_FILE "build.bl"

extern char *ENV_LIB_DIR;
extern char *ENV_EXEC_DIR;
extern char *ENV_CONF_FILEPATH;

#endif // BL_CONFIG_H
