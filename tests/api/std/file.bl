#load "std/file.bl"
#load "std/utest.bl"

using std::utest;

public module std {
  public module file {
    const filename string = "test.txt";
      
    #test
    fn create_close() i32 {
      mut f = open(filename, "w+");
    
      if !f.is_open { return FAIL; }
      if libc::strcmp(f.filename, filename) != 0 { return FAIL; }
    
      close(&f);
      remove(filename);
      return SUCCESS;
    }
    
    #test
    fn string_rw() i32 {
      mut f = open(filename, "w+");
      if f.is_open {
        const msg string = "hello world";
        mut written = swrite(&f, msg, libc::strlen(msg));
        if written == 0 { return FAIL; }
      }
      close(&f);
    
      f = open(filename, "r");
      if f.size == 0 { return FAIL; }
    
      if f.is_open {
        mut data string = cast(string) memory::malloc(sizeof(char) * f.size);
        mut read = sread(&f, data, f.size);
        if read == 0 { return FAIL; }
        libc::free(cast(*void) data);
      }
    
      close(&f);
      remove(filename);
      return SUCCESS;
    }
  }
}