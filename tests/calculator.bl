/*
 * Testing calculator
 */

extern i32 getchar();
extern i32 printf(string s, i32 i); // TODO: vaargs
extern i32 puts(string s);

i32 main() {
  i32 cmd;
  i32 cmd_quit = 113; // Q
  i32 cmd_return = 10; // Return

  // TODO: support enums
  i32 state_quit = 1;
  i32 state_enter_a = 2;
  i32 state_enter_b = 3;
  i32 state_add = 4;
  
  i32 state = state_enter_a;
  i32 num;
  i32 a;
  i32 b;

  printf("type 'q' for quit\n", 0); 

  loop {
    // simple state machine
    if (state == state_quit) {
      break;
    } else if (state == state_enter_a) {
      num = 0;
      printf("enter first number: ", 0);
    } else if (state == state_enter_b) {
      a = num;
      num = 0;
      printf("enter second number: ", 0);
    } else if (state == state_add) {
      b = num;
      printf("addition is: %d", add(a, b));
      a = 0;
      b = 0;
    }

    loop {
      cmd = getchar();

      if (cmd == cmd_quit) {
        state = state_quit;
        break;
      }

      if (cmd == cmd_return) {
        if (state == state_add) {
          state = state_enter_a;
        } else if (state == state_enter_a) {
          state = state_enter_b;
        } else if (state == state_enter_b) {
          state = state_add;
        }

        break;
      }

      if (is_number(cmd)) {
        num = num * 10 + get_number(cmd);       
      } else {
        puts("invalid number");
      }
    }
  }

  puts("exit");

  return 0;
}

i32 add(i32 a, i32 b) {
  return a + b;
}

bool is_number(i32 ch) {
  return ch >= 48 && ch <= 57;
}

i32 get_number(i32 ch) {
  return ch - 48;
}
