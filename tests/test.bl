/* testing playground */

#test
fn integer_implicit_cast() i32 {
  mut foo foo_t;

  foo.i = 20;
  foo.bar.i = foo.i;

  foo = {
    .i = 20,
    .bar.i = 20
  };

  mut foo_ptr *foo_t = &foo;

  (*foo_ptr) = {
    .i = 20,
    .bar.i = 20
  };

  foo_ptr = {
    ->i = 20,
    ->bar.i = 20
  };

  //(&foo)->i = 20; // cause crash

  gimme_void_ptr(foo_ptr);
  
  mut _u8 u8 = 0;
  mut e enm = enm::A;

  if _u8 == 10 {}

  mut i32_size size_t = sizeof(i32);

  foo.e = enm::A;

  //const c u32 = 10 + 2;

  return 0; 
}

struct foo_t {
  bar bar_t,
  i i32,
  e enm
}

struct bar_t {
  i i64
}

fn gimme_void_ptr(any *void) {
}

fn gimme_i32_ptr(any *i32) {
}

enum enm {
  A = 10,
  B = A
}
