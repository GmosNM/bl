#import "std/async"
#import "std/async"
#import "std/async"
#import "std/async"

/*

TODO:

- #comptime - automatically comptime evaluated in case all the arguments are compile-time known.
- Introduce calling conventions.

- Change syntax of default argument value assignment to ':'.
- Properly handle fail of ast_expr_lit_fn while generating recipe implementation.

// To memory.bl???
bytes_to_value :: fn (TValue: type #comptime, bytes: []u8) TValue {
    tmp: TValue;
    assert(bytes.ptr);
    memcpy(auto &tmp, bytes.ptr, std.min(sizeof(TValue), auto bytes.len));
    return tmp;
}
*/
/* un-comment while fixing using propagation into local functions.
list_dir :: fn (paths: *[..]string_view, dir: string_view) {
    using std;
    foo :: fn (i: *Info) {};
}
*/

main :: fn () s32 {
    return 0;
}

