#import "std/fs"

foo :: fn () #comptime {
    using std;
    file, err :: open_file(#file);
    defer close_file(&file);
    if err { 
        print("%\n", err); 
        return;
    }
    content := str_new();
    defer str_delete(&content);

    read_string(&file, &content);
    print("%\n\n", content);
}

my_size :: fn (T: type #comptime) usize #comptime {
    return sizeof(T);
}

homo :: fn (a: T, b: ?T) {}

/*
sailor :: fn (T: type #comptime) T {
    return T;
}
*/

main :: fn () s32 {
    homo(10, 20);
    //sailor(s32);
    return 0;
}
