/* playground */

#load "std/core.bl"

main :: fn () s32 {
    {
        i := typeinfo(s32);
        test_print_type_info(i);
    }

    {
        i := typeinfo(u64);
        test_print_type_info(i);
    }

    {
        i := typeinfo(f32);
        test_print_type_info(i);
    }

    {
        i := typeinfo(*s32);
        test_print_type_info(i);
    }
    
    return 0;
};

test_print_type_info :: fn (i: *TypeInfo) {
    if i.kind == TypeKind.Int {
        int_info := cast(*TypeInfoInt) i;
        print("Integer type; bitcount = %; ", int_info.bitcount);

        if int_info.signed {
            print("signed\n");
        } else {
            print("unsigned\n");
        }
    } else if i.kind == TypeKind.Ptr {
        ptr_info := cast(*TypeInfoPtr) i;
        print("Pointer type; -> ");
        test_print_type_info(ptr_info.pointed);
    } else if i.kind == TypeKind.Real {
        real_info := cast(*TypeInfoReal) i;
        print("Real type; bitcount = %\n", real_info.bitcount);
    }
};

