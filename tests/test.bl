foo :: fn (outer: ?T) {
    bar :: fn (inner: ?T) {
        print("bar = %\n", inner);
    };
    
    print("foo = %\n", outer);
    bar(true);
}

/*
homo :: fn (callback: *fn(i: ?T) = &fn(i: T) {
    print("hello from default i = %!\n", i);
}) {
    callback(10);
}
*/

bar :: fn (i: s32) {
    uber :: fn (i: s32) {};
}

main :: fn () s32 {
    //foo(10);
    //homo();
    return 0;
}

