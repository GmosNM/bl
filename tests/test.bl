/* playground */

main :: fn () s32 {
    file_open(#file);
    return 0; 
} 

#private
FileError :: enum {
    OK;
    NotFound;
}

FileOptional :: struct { e: FileError; v: File};
error :: fn (e: FileError) FileOptional #inline {
    return {:FileOptional: e, null};
}

ok :: fn (v: File) FileOptional #inline {
    assert(v);
    return {:FileOptional: FileError.OK, v};
}

File :: *u8;

// read
// write
// create
// append

file_open :: fn (filepath: string) FileOptional {
    return ok(null);
}
