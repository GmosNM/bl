/* playground */

//#load "std/debug.bl"

main :: fn () s32 {
  i : s32;
  i = 10; // generate error
  foo(100000);

  homo :: fn () {
  };

  homo();

  j := fn (j: s32) s32 {
    loop (i := 0; i < j; i += 1) {
      say_hello();
    }
    return j;
  } (10);

  return j; 
};

putchar :: fn (c: s32) s32 #extern;

foo :: fn (i: s32) {
  //putchar(i);
  if (i == 0) {
    return;
  } else {
    foo(i - 1);
    //putchar(i);
  }
};

say_hello :: fn () {
  putchar(72);
  putchar(101);
  putchar(108);
  putchar(108);
  putchar(111);
  putchar(32);
  putchar(87);
  putchar(111);
  putchar(114);
  putchar(108);
  putchar(100);
  putchar(10);
};

gimme :: fn (ptr: *s32, ptr2: s32) *s32 {
  return null;
};

#test "kokot" {
  i := 0;
  i;
};