/*

- Mixture of compile time and regular arguments.
- Acts like a polymorph (generate new function for each value).
- Skip LLVM for comptime values.
- Does not evaluate automatically while compilation unless the whole function is marked as #comptime.
- Call side checking for constantness.
- Insert 'value' into scope when it's replaced to allow access to the symbol i.e. in return type.

bar :: macro (v: s32) s32 {
    return v + 1;
}


*/

foo :: fn (a: bool, FOO: s32 #comptime, b: s32) {
    a;
    b;
    print("FOO = %\n", FOO);
}

main :: fn () s32 {
    i :: 10;
    foo(true, 666, i);
    print("DONE\n");
    return 0;
}
