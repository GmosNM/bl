/st*
 * Unit test 7
 * -----------
 * Expressions with method calls and sub expressions.
 */

#load "std/utest.bl"
using std::utest;

module exprs {
  #test
  fn expr_basics() i32 {
    mut a = 2 + 2 * 12 + 4; // 30
    mut b = (2 + 2) * 12 + 4; // 52
    mut c = 2 + 2 * (12 + 4); // 34
    mut d = (2 + get()) * (12 * (4 + 3)); // 588
    mut e = add(a, b) * (10 - 5); // 410  
  
    if a != 30 || b != 52 || c != 34 || d != 588 || e != 410 {
      return FAIL;
    }
  
    return SUCCESS;
  }

  #test 
  fn expr_unary() i32 {
    mut a = -1;
    mut b = -(2 + 2);
    mut c = +(2 + 2);
    mut d = -a;
    mut e = 1 -(-2); // ERROR not working without ()
    mut f = -get();
    mut g = (get() + 1) * -10;
  
  
    //const ca i32 = -1; // ERROR cannot be evaluated
  
    if a != (0 - 1) { return FAIL; }
    if b != (0 - 4) { return FAIL; }
    if c != 4 { return FAIL; }
    if d != 1 { return FAIL; }
    if e != 3 { return FAIL; }
    if f != (0 - 5) { return FAIL; }
    if g != (0 - 60) { return FAIL; }
  
    return SUCCESS;
  }
  
  fn get() i32 {
    return 5;
  }
  
  fn add(a i32, b i32) i32 {
    return a + b;
  }
}