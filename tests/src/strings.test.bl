#load "std/string.bl"

#private
test_strings_init :: fn () #test {
    s1 := string_new();
    assert(s1.ptr != null);
    assert(s1.len == 0);

    string_append(&s1, "foo");
    assert(string_compare("foo", s1));

    string_append(&s1, 12);
    assert(string_compare("foo12", s1));

    string_append(&s1, true);
    assert(string_compare("foo12true", s1));

};

test_string_split_by_last :: fn () #test {
    lhs: string;
    rhs: string;

    if string_split_by_last("1234/1234", '/', &lhs, &rhs) {
        assert(lhs.len == 4);
        assert(rhs.len == 4);
    }

    if string_split_by_last("/12341234", '/', &lhs, &rhs) {
        assert(lhs.len == 0);
        assert(rhs.len == 8);
    }

    if string_split_by_last("12341234/", '/', &lhs, &rhs) {
        assert(lhs.len == 8);
        assert(rhs.len == 0);
    }

    if string_split_by_last("/", '/', &lhs, &rhs) {
        assert(lhs.len == 0);
        assert(rhs.len == 0);
    }

    assert(!string_split_by_last("12341234", '/', &lhs, &rhs));
    assert(!string_split_by_last("", '/', &lhs, &rhs));
}

test_string_split_by_first :: fn () #test {
    lhs: string;
    rhs: string;

    if string_split_by_first("1234/1234", '/', &lhs, &rhs) {
        assert(lhs.len == 4);
        assert(rhs.len == 4);
    }

    if string_split_by_first("/12341234", '/', &lhs, &rhs) {
        assert(lhs.len == 0);
        assert(rhs.len == 8);
    }

    if string_split_by_first("12341234/", '/', &lhs, &rhs) {
        assert(lhs.len == 8);
        assert(rhs.len == 0);
    }

    if string_split_by_first("/", '/', &lhs, &rhs) {
        assert(lhs.len == 0);
        assert(rhs.len == 0);
    }

    assert(!string_split_by_first("12341234", '/', &lhs, &rhs));
    assert(!string_split_by_first("", '/', &lhs, &rhs));
}
