#test "fundamental types" {
  assert(sizeof(u8) == 1);
  assert(sizeof(u16) == 2);
  assert(sizeof(u32) == 4);
  assert(sizeof(u64) == 8);

  assert(sizeof(s8) == 1);
  assert(sizeof(s16) == 2);
  assert(sizeof(s32) == 4);
  assert(sizeof(s64) == 8);

  assert(sizeof(char) == 1);
  assert(sizeof(bool) == 1);
  assert(sizeof(string) == 8);
  assert(sizeof(usize) == 8);
  assert(sizeof(*void) == 8);

  a := 0;
  assert(sizeof(a) == 4);
  assert(sizeof(0) == 4);
};

#test "custom types" {
  Foo : struct {
    i s32,
    j s32
  };

  foo Foo;
  foo_ptr *Foo;

  assert(sizeof(Foo) == 8);
  assert(sizeof(foo) == 8);
  assert(sizeof(foo_ptr) == 8);
};

#test "array types" {
  arr s32[10];
  assert(sizeof(arr) == 40);
};