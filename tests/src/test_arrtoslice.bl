#test "array to slice initialization" {
    arr :: {:[10]s32: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    slice := arr;

    assert(arr.len == slice.len);

    loop i := 0; i < slice.len; i += 1 {
        assert(arr[i] == slice[i]);
    }
}

#test "array to slice initialization constants" {
    arr :: {:[10]s32: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    slice :: arr;

    assert(arr.len == slice.len);

    loop i := 0; i < slice.len; i += 1 {
        assert(arr[i] == slice[i]);
    }
}

#test "array to slice argument cast" {
    arr :: {:[10]s32: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};

    foo :: fn (data: []s32) {
        assert(data.len == 10);

        loop i := 0; i < data.len; i += 1 {
            assert(data[i] == i);
        }
    };

    foo(arr);
}
