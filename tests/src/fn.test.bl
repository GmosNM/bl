#private
function_calls :: fn () #test2 {
    _1 :: fn () {
    };

    _2 :: fn (i: s32) s32 {
        return i;
    };

    _1();  
    assert(_2(10) == 10);
};

implicit_functions_direct_call :: fn () #test2 {
    i := fn (i: s32, j: s32) s32 {
        return i * j; 
    } (2, 3);

    assert(i == 6);

    fn () {
    } ();
};

function_pointers :: fn () #test2 {
    foo :: fn (v: s32) s32 {
        return v;
    };

    bar :: fn (v: s32) s32 {
        return v;
    };

    ptr := &foo;
    assert(ptr(10) == 10);

    ptr = &bar;
    assert(ptr(20) == 20);

    ptr2 := &fn () {};
    ptr2();
};

nested_function_pointers :: fn () #test2 {
    Foo :: struct {
        v_fn: *fn()
    };

    TestFn :: fn () {};

    foo := {:Foo: 0};
    foo.v_fn = &TestFn; 

    foo.v_fn();
};
