#load "libc.bl"

main : fn () s32 {
  arr s32[10];
  if arr.count != 10 { return EXIT_FAILURE; }

  i := 0;
  loop i < arr.count {
    arr[i] = i;
    i = i + 1;
  }

  i = 0;
  loop i < arr.count {
    printf("arr[i] = %d\n", arr[i]);
    i = i + 1;
  }


  foos Foo[10];
  foos.count;

  i = 0;
  loop i < foos.count {
    foos[i].i = i;
    i = i + 1;
  }

  i = 0;
  loop i < foos.count {
    printf("foos[i].i = %d\n", foos[i].i);
    i = i + 1;
  }

  bar Bar;
  i = 0;
  loop i < bar.is.count {
    bar.is[i] = i;
    i = i + 1;
  }

  i = 0;
  loop i < bar.is.count {
    printf("bar.is[i] = %d\n", bar.is[i]);
    i = i + 1;
  }

  // check array size expressions
  B : 5;
  C : 20 + B;
  arr2 s32[(10 + 2 * 3) * 2];
  arr3 s32[200 + 1 + C];
  arr4 s32[#run get()];
  arr5 s32[1 + #run get()];

  printf("arr2.count = %d\n", arr2.count);
  printf("arr3.count = %d\n", arr3.count);
  printf("arr4.count = %d\n", arr4.count);
  printf("arr5.count = %d\n", arr5.count);
  
  return EXIT_SUCCESS;
};

Foo : struct {
  i s32
};

Bar : struct {
  is s32[32]
};

get : fn () s32 {
  return 10;
};
