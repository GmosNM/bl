/*
 * Unit test
 * -----------
 * Enums.
 */

#load "std/utest.bl"
using std::utest;

module enums {
  enum state_e {
    S0,
    S1,
    S2 = 10,
    S3,
    S4 = 50,
    S5,
    S6 = 50 + 3 + 12 + 13,
    S7 = S6 + 1,
    S8 = S7 * (1 + S2),
    S9, // S8 + 1
    S10 // S9 + 1
  }
  
  enum names_e string { 
    Tereza = "tereza",
    Milan = "milan"
  }
  
  #test
  fn enum_i32_values() i32 {
    using state_e;

    if S0 != cast(state_e) 0 {
      return FAIL;
    }

    if S1 != cast(state_e) 1 {
      return FAIL;
    }

    if S2 != cast(state_e) 10 {
      return FAIL;
    }

    if S3 != cast(state_e) 11 {
      return FAIL;
    }

    if S4 != cast(state_e) 50 {
      return FAIL;
    }

    if S5 != cast(state_e) 51 {
      return FAIL;
    }

    if S6 != cast(state_e) 78 {
      return FAIL;
    }

    if S7 != cast(state_e) 79 {
      return FAIL;
    }

    if S8 != cast(state_e) 869 {
      return FAIL;
    }

    if S9 != cast(state_e) 870 {
      return FAIL;
    }

    if S10 != cast(state_e) 871 {
      return FAIL;
    }

    return SUCCESS;
  }

  #test
  fn enum_i32_set() i32 {
    mut s = state_e::S0;
    if s != state_e::S0 {
      return FAIL;
    }
    
    return SUCCESS;
  }

  #test
  fn enum_string() i32 {
    using names_e;

    if Tereza != cast(names_e) "tereza" {
      return FAIL;
    }

    if Milan != cast(names_e) "milan" {
      return FAIL;
    }

    return SUCCESS;
  }
}

