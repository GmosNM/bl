#test "fundamental types" {
  func : fn (in any) {
    if (in.t == TypeKind.UInt) {
      val := cast(*u32) in.val;
      assert(*val == 10);
    } else if (in.t == TypeKind.SInt) {
      val := cast(*s32) in.val;
      assert(*val == 11);
    } else if (in.t == TypeKind.Size) {
      val := cast(*usize) in.val;
      assert(*val == 12);
    } else if (in.t == TypeKind.Real) {
      val := cast(*f32) in.val;
      assert(*val == 13.f);
    } else if (in.t == TypeKind.Bool) {
      val := cast(*bool) in.val;
      assert(*val);
    }
  };

  a u32   := 10;
  b s32   := 11;
  c usize := 12;
  d f32   := 13.f;
  e bool  := true;

  func(a);
  func(b);
  func(c);
  func(d);
  func(e);
};