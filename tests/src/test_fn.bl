#load "std/debug.bl"

#test "function calls" {
  _1 :: fn () {
  };

  _2 :: fn (i: s32) s32 {
    return i;
  };

  _1();  
  assert(_2(10) == 10);
};

#test "implicit functions direct call" {
  i := fn (i: s32, j: s32) s32 {
    return i * j; 
  } (2, 3);

  assert(i == 6);

  fn () {
  } ();
};

#test "function pointers" {
    foo :: fn (v: s32) s32 {
        return v;
    };

    bar :: fn (v: s32) s32 {
        return v;
    };

    ptr := &foo;
    assert(ptr(10) == 10);

    ptr = &bar;
    assert(ptr(20) == 20);

    ptr2 := &fn () {};
    ptr2();
};

#test "nested function pointers" {
    Foo :: struct {
        v_fn: *fn()
    };

    TestFn :: fn () {};

    foo := {:Foo: 0};
    foo.v_fn = &TestFn; 

    foo.v_fn();
};
