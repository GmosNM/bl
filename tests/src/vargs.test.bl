#private
vargs_functions :: fn () #test {
    _0 :: fn (args: ...s32) {
        assert(args.len == 0);
    };

    _2 :: fn (args: ...s32) {
        assert(args.len == 2);
        assert(args[0] == 10);
        assert(args[1] == 20);
    };

    _10 :: fn (i: s32, args: ...s32) {
        assert(args.len == 0);
        assert(i == 10);
    };

    _12 :: fn (i: s32, args: ...s32) {
        assert(args.len == 2);
        assert(args[0] == 10);
        assert(args[1] == 20);
        assert(i == 10);
    };

    _0();
    _2(10, 20);
    _10(10);
    _12(10, 10, 20);
};

vargs_forward :: fn () #test {
    bar :: fn (args: ...s32) {
        test_s32_eq(auto args.len, 3);
    };

    foo :: fn (args: ...s32) {
        test_s32_eq(auto args.len, 3);
        bar(args);
    };

    foo(10, 20, 30);
}
