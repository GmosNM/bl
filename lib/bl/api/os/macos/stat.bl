#load "_types.bl"

_S_IRWXU : _mode_t : 0x1C0;
_S_IRUSR : _mode_t : 0x100;
_S_IWUSR : _mode_t : 0x80;
_S_IXUSR : _mode_t : 0x40;
_S_IRWXG : _mode_t : 0x38;
_S_IRGRP : _mode_t : 0x20;
_S_IWGRP : _mode_t : 0x10;
_S_IXGRP : _mode_t : 0x8;
_S_IRWXO : _mode_t : 0x7;
_S_IROTH : _mode_t : 0x4;
_S_IWOTH : _mode_t : 0x2;
_S_IXOTH : _mode_t : 0x1;
_S_ISUID : _mode_t : 0x800;
_S_ISGID : _mode_t : 0x400;
_S_ISVTX : _mode_t : 0x200;

__S_IFMT : u32 : 0xf000;
__S_IFDIR : u32 : 0x4000;
__S_IFCHR : u32 : 0x2000;
__S_IFBLK : u32 : 0x6000;	
__S_IFREG : u32 : 0x8000;
__S_IFIFO : u32 : 0x1000;
__S_IFLNK : u32 : 0xA000;
__S_IFSOCK : u32 : 0xC000;

_S_ISDIR :: fn (mode: u32) bool #inline {
    return (mode & __S_IFMT) == __S_IFDIR;    
}

_S_ISREG :: fn (mode: u32) bool #inline {
    return (mode & __S_IFMT) == __S_IFREG;    
}

_stat_t :: struct {
    	st_dev: _dev_t;
	    st_mode: _mode_t;
	    st_nlink: _nlink_t;
	    st_ino: _ino64_t;
	    st_uid: _uid_t;
	    st_gid: _gid_t;
	    st_rdev: _dev_t;
	    st_atimespec: _timespec;
	    st_mtimespec: _timespec;
	    st_ctimespec: _timespec;
	    st_birthtimespec: _timespec;
	    st_size: _off_t;
	    st_blocks: _blkcnt_t; 
    	st_blksize: _blksize_t;
    	st_flags: u32;
    	st_gen: u32;
    	st_lspare: s32;
    st_qspare: [2]s64;
}
_stat :: fn (path: *c_char, buf: *_stat_t) c_int #extern "stat$INODE64";
_fstat :: fn (fd: c_int, stat: *_stat_t) c_int #extern "fstat$INODE64";
_mkdir :: fn (path: *c_char, mode: _mode_t) c_int #extern "mkdir";
