#scope _io_impl

read :: fn (handle: std.File, dest: *u8, size: s64) (s64, Error) {
    if !dest { return 0, error(ERR_INVALID_HANDLE, "Cannot read, destination is invalid."); }
    read_bytes: win32.DWORD #noinit;
    if win32.ReadFile(handle, dest, auto size, &read_bytes, null) == 0 {
        ec, estr :: os_get_last_error();
        return 0, error(ec, "Cannot read file: %", estr);
    }
    return auto read_bytes, OK;
}

write :: fn (handle: std.File, src: *u8, size: s64) (s64, Error) {
    if !src { return 0, error(ERR_INVALID_HANDLE, "Cannot write, source is invalid."); }
    written_bytes: win32.DWORD #noinit;
    if win32.WriteFile(handle, src, auto size, &written_bytes, null) == 0 {
        ec, estr :: os_get_last_error();
        return 0, error(ec, "Cannot write to file: %", estr);
    }
    return auto written_bytes, OK;
}
