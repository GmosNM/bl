#scope _io_impl

read :: fn (handle: std.File, dest: *u8, size: s64) (s64, Error) {
    if !dest { return 0, error(ERR_INVALID_HANDLE, "Cannot read, destination is invalid."); }
    read :: C.read(auto handle, auto dest, auto size);
    if read < 0 { 
        ec, estr :: os_get_last_error();
        return 0, error(ec, "Cannot read file: %", estr);
    }
    return auto read, OK;
}

write :: fn (handle: std.File, src: *u8, size: s64) (s64, Error) {
    if !src { return 0, error(ERR_INVALID_HANDLE, "Cannot write, source is invalid."); }
    written :: C.write(auto handle, auto src, auto size);
    if written < 0 { 
        ec, estr :: os_get_last_error();
        return 0, error(ec, "Cannot write to file: %.", estr);
    }
    return auto written, OK;
}
