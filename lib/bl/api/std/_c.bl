//************************************************************************************************
// bl
//
// File:   c.bl
// Author: Martin Dorazil
// Date:   13/2/19
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

// LIB C binding

RAND_MAX :: 2147483647;

c_malloc :: fn (size: c_size_t) c_void_ptr #extern "malloc";
c_free   :: fn (ptr: c_void_ptr) #extern "free";
c_strlen :: fn (str: *c_char) c_size_t #extern "strlen";
c_strcmp :: fn (first: *c_char, second: *c_char) c_int #extern "strcmp";
c_system :: fn (cmd: *u8) s32 #extern "system";
c_fopen  :: fn (filename: *c_char, mode: *c_char) c_void_ptr #extern "fopen";
c_fclose :: fn (handle: c_void_ptr) c_int #extern "fclose";
c_fseek  :: fn (handle: c_void_ptr, offest: c_int, origin: c_int) c_int #extern "fseek";
c_fread  :: fn (ptr: c_void_ptr, size: c_size_t, count: c_size_t, handle: c_void_ptr) c_size_t #extern "fread";
c_fwrite :: fn (ptr: c_void_ptr, size: c_size_t, count: c_size_t, handle: c_void_ptr) c_size_t #extern "fwrite";
c_ftell  :: fn (handle: c_void_ptr) c_int #extern "ftell";
c_time   :: fn (t: c_void_ptr) c_ulong #extern "time";
