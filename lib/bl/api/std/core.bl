//************************************************************************************************
// bl
//
// File:   core.bl
// Author: Martin Dorazil
// Date:   2/11/19
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#load "debug.bl"
#load "memory.bl"
#load "print.bl"

_AllocFn :: * fn (size: usize) *u8;
_FreeFn :: * fn (p: *u8);
_PrintLogFn :: * fn (kind: PrintLogKind, format: string, args: []Any, file: string, line: s32);

// BL global context 
_Context :: struct {
    /* Default memory allocation function. */
    alloc_fn: _AllocFn;

    /* Defualt memory free function. */
    free_fn: _FreeFn;

    /* Defualt debug log function. */
    print_log_fn: _PrintLogFn;
};

_context := {:_Context: &malloc, &free, &_print_log};

S8_MIN  : s8 : -128;
S8_MAX  : s8 : 127;
S16_MIN : s16 : -32768;
S16_MAX : s16 : 32767;
S32_MIN : s32 : -2147483648;
S32_MAX : s32 : 2147483647;
S64_MIN : s64 : -9223372036854775808;
S64_MAX : s64 : 9223372036854775807;

U8_MIN  : u8 : 0;
U8_MAX  : u8 : 255;
U16_MIN : u16 : 0;
U16_MAX : u16 : 65535;
U32_MIN : u32 : 0;
U32_MAX : u32 : 4294967295;
U64_MIN : u64 : 0;
U64_MAX : u64 : 18446744073709551615;
