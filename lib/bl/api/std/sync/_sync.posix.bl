#import "os/posix/pthread"
#load "sync.bl"

#scope _sync_impl

Mutex :: pthread_mutex_t;

init :: fn (mutex: *Mutex) #inline {
    err :: pthread_mutex_init(mutex, null);
    if err != 0 {
        estr :: cast(*u8) C.strerror(err);
        panic("Cannot init mutex: '%' (%).", estr, err);
    }
}

terminate :: fn (mutex: *Mutex) #inline {
    err :: pthread_mutex_destroy(mutex);
    if err != 0 {
        estr :: cast(*u8) C.strerror(err);
        panic("Cannot terminate mutex: '%' (%).", estr, err);
    }
}

lock :: fn (mutex: *Mutex) #inline {
    err :: pthread_mutex_lock(mutex);
    if err != 0 {
        estr :: cast(*u8) C.strerror(err);
        panic("Cannot lock mutex: '%' (%).", estr, err);
    }
}

try_lock :: fn (mutex: *Mutex) bool #inline {
    return pthread_mutex_lock(mutex) == 0;
}

unlock :: fn (mutex: *Mutex) #inline {
    err :: pthread_mutex_unlock(mutex);
    if err != 0 {
        estr :: cast(*u8) C.strerror(err);
        panic("Cannot unlock mutex: '%' (%).", estr, err);
    }
}
