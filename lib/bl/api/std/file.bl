//************************************************************************************************
// bl
//
// File:   file.bl 
// Author: Martin Dorazil
// Date:   13/8/19
//
// Copyright 2018 Martin Dorazil
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//************************************************************************************************

#load "std/string.bl"

File :: *u8; 

file_create :: fn (filename: string) File {
    mode := "w+";
    return fopen(filename.ptr, mode.ptr); 
};

file_open :: fn (filename: string) File {
    mode := "rw";
    return fopen(filename.ptr, mode.ptr); 
};

file_close :: fn (file: File) {
    fclose(file);
};

file_read_all :: fn (file: File) string {
    fseek(file, 0, SeekEnd);
    size := ftell(file);
    if size == 0 {
        return string_new();
    }

    fseek(file, 0, SeekSet);
    tmp := string_new_reserved(size * sizeof(u8));
    read := fread(tmp.ptr, sizeof(u8), size, file);
    tmp.len = read;
    return tmp;
};

#private

SeekSet :: 0;
SeekCur :: 1;
SeekEnd :: 2;