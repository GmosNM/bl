#load "dlib.bl"

#scope _dlib_impl

Library :: *u8;

open :: fn (lib_name: string_view) (Library, Error) {
	clib: *u8 = null;
	if lib_name.len > 0 { clib = lib_name.ptr; }
	handle :: _dlopen(clib, RTLD_LAZY);
	if !handle {
		return null, error(std.ctostr(_dlerror()));
	}
	return handle, OK;
}

sym :: fn (lib: Library, sym_name: string_view) (*u8, Error) {
	handle :: _dlsym(lib, std.strtoc(sym_name));
	if !handle {
		return null, error(std.ctostr(_dlerror()));
	}
	return handle, OK;
}

close :: fn (lib: Library) {
	if !lib { return; }
	_dlclose(lib);
}

#private

RTLD_LAZY   :: 0x1;
//RTLD_NOW    :: 0x2;
//RTLD_LOCAL  :: 0x4;
//RTLD_GLOBAL :: 0x8;

_dlopen :: fn (path: *u8, mode: s32) *u8 #extern "dlopen";
_dlclose :: fn (handle: *u8) s32 #extern "dlclose";
_dlsym :: fn (handle: *u8, symbol: *C.char) *u8 #extern "dlsym";
_dlerror :: fn () *s8 #extern "dlerror";
